# name: Docker Image CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Build Docker image for Node.js
#         run: |
#           docker build -t manaphat/node-servernginx:grafana ./TaskTracker-nginx
          
#       - name: Push Docker image to Docker Hub
#         run: |
#           docker push manaphat/node-servernginx:grafana

name: SonarQube Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          ./sonar-scanner-*/bin/sonar-scanner \
            -Dsonar.projectKey=my-project \
            -Dsonar.sources=src \
            -Dsonar.host.url=http://<your-sonarqube-ip>:9000 \
            -Dsonar.login=$SONAR_TOKEN
