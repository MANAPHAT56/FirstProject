version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./tls.crt:/etc/nginx/ssl/fullchain.pem
      - ./tls.key:/etc/nginx/ssl/privkey.pem
    depends_on:
      - node-server
      - node-server2
      - node-server3
    networks:
      - monitor-net

  db:
    image: mysql:5.7.16
    container_name: mysql-container
    environment:    
      MYSQL_ROOT_PASSWORD: mypassword
      MYSQL_DATABASE: my_db
      MYSQL_USER: root

    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      # - type: bind
      #   source: D:\\best\\xamppja\\tote
      #   target: /var/lib/mysql
    networks:
      - monitor-net
    command:
      - --performance_schema=ON

  mysqld_exporter:
    image: prom/mysqld-exporter
    command:
       - --config.my-cnf="/cfg/.my.cnf"
       - --mysqld.username=root:mypassword
       - --mysqld.address=db:3306
       - --collect.perf_schema.eventsstatements
    volumes:
       - "./.my.cnf:/cfg/.my.cnf"
    ports:
       - "9104:9104"
    networks:
       - monitor-net
    depends_on:
      - db
   
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-container
    environment:
      PMA_HOST: mysql-container
      PMA_USER: root
      PMA_PASSWORD: mypassword
    ports:
      - "8081:80"
    networks:
      - monitor-net

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - monitor-net

  node-server:
    build:
      context: .
    container_name: node-server
    ports:
      - "5001:5000"
    networks:
      - monitor-net

  node-server2:
    build:
      context: .
    container_name: node-server2
    ports:
      - "5002:5000"
    networks:
      - monitor-net

  node-server3:
    build:
      context: .
    container_name: node-server3
    ports:
      - "5003:5000"
    networks:
      - monitor-net
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
    restart: always
    networks:
      - monitor-net
    ports:
      - "9090:9090"
  node-exporter:
    image: prom/node-exporter:latest
    networks:
      - monitor-net
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge

volumes:
  redis-data:
  prometheus_data:
  grafana_data:
  mysql-data:
